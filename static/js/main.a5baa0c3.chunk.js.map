{"version":3,"sources":["Ai.js","helper.js","acronyms.js","gamepad.js","Snake.js","Food.js","ScoreBoard.js","FancyButton.js","GameOverScreen.js","App.js","index.js"],"names":["module","exports","tick","snakeCells","food","updateBody","setSpeed","setSnake","setDirection","direction","foodCheck","updatedCells","snakeHead","slice","distanceX","x","distanceY","y","moveToFood","i","length","headBodyAlignment","aiGridAlignment","isArrayInArray","arr","item","item_as_string","JSON","stringify","some","ele","arrayEquals","array1","array2","randomItem","array","Math","floor","random","load","prevDir","interval","window","setInterval","gp","navigator","getGamepads","buttons","pressed","axes","current","clearInterval","props","transitionName","transitionEnterTimeout","speed","transitionLeaveTimeout","snake","map","cell","style","left","top","snakeHeadImage","isGameOver","rotateHead","closeToFood","key","className","src","config","angle","spread","startVelocity","elementCount","dragFriction","duration","stagger","width","height","colors","position","confStyle","confettiLocation","active","showConfetti","acronymStatus","currentAcronym","acronym","fullWord","aria-hidden","id","score","defaultChecked","onChange","aiStatus","setAi","volume","setVolume","acronymsStatus","console","log","setAcronymStatus","onClick","closeModal","customStyles","content","right","bottom","marginRight","boxShadow","transform","border","setGameOver","location","reload","isOpen","onAfterOpen","onRequestClose","shouldCloseOnOverlayClick","FancyButton","helper","require","acronyms","gamepad","App","useState","setScore","randomLocation","setFood","prevDirection","value","ref","useRef","useEffect","usePrevious","setConfetti","setConfettiLocation","acronymMap","setAcronym","setCloseToFood","keypress","gameOver","playSound","sound","bloop","Audio","play","abs","handleCloseToFood","hasEatenFood","snakeTail","unshift","increaseSnakeLength","addEventListener","AI","outOfBoundsCheck","snakeBody","headBodyCollisionCheck","GameOverScreen","ScoreBoard","Snake","Food","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5baa0c3.chunk.js","sourcesContent":["function aiGridAlignment(snakeHead, setDirection) {\n    if (snakeHead.x > 98) {\n        snakeHead.x -= 2\n        snakeHead.y += 2\n    } else if (snakeHead.x < 0) {\n        snakeHead.x += 2\n        snakeHead.y += 2\n    }\n    else if (snakeHead.y > 99) {\n        snakeHead.x -= 2\n        snakeHead.y -= 2\n    }\n    else if (snakeHead.y < 0) {\n        snakeHead.x += 2\n        snakeHead.y += 2\n    }\n}\n\nfunction moveToFood(food, snakeHead, setDirection, direction) {\n    let distanceX = food.x - snakeHead.x\n    let distanceY = food.y - snakeHead.y\n\n    if (distanceX > 0 || distanceY > 0) {\n        if (distanceX != 0) {\n            snakeHead.x += 2\n            if (snakeHead.x > 99) {\n                setDirection(\"down\")\n            } else\n                setDirection(\"right\")\n        } else if (distanceY != 0) {\n            snakeHead.y += 2\n            setDirection(\"down\")\n        }\n    }\n    else if (distanceX < 0 || distanceY < 0) {\n        if (distanceX != 0) {\n            snakeHead.x -= 2\n            setDirection(\"left\")\n        } else if (distanceY != 0) {\n            snakeHead.y -= 2\n            setDirection(\"up\")\n        }\n    }\n}\n\nfunction headBodyAlignment(snakeHead, updatedCells, direction) {\n    for (let i = 0; i < updatedCells.length - 1; i++) {\n        if (snakeHead.x == updatedCells[i].x && snakeHead.y == updatedCells[i].y) {\n            if (direction == \"left\") {\n                snakeHead.x -= 2\n                snakeHead.y -= 2\n            } else if (direction == \"right\") {\n                snakeHead.x += 2\n                snakeHead.y += 2\n            } else if (direction == \"up\") {\n                snakeHead.x -= 2\n                snakeHead.y += 2\n            } else if (direction == \"down\") {\n                snakeHead.x += 2\n                snakeHead.y -= 2\n            }\n            return;\n        }\n    }\n}\n\nfunction tick(snakeCells, food, updateBody, setSpeed,\n    setSnake, setDirection, direction, foodCheck) {\n    setSpeed(25)\n\n    let updatedCells = updateBody(snakeCells)\n    let snakeHead = snakeCells.slice(-1)[0]\n\n    moveToFood(food, snakeHead, setDirection, direction)\n    headBodyAlignment(snakeHead, updatedCells, direction)\n    aiGridAlignment(snakeHead, setDirection)\n\n    //Turn this on when AI is improved\n    //headBodyCollisionCheck(snakeHead)    \n    // outOfBoundsCheck(snakeHead)\n\n    foodCheck(snakeHead, updatedCells)\n\n    setSnake(updatedCells)\n}\n\n\nmodule.exports = {\n    tick\n}","function isArrayInArray(arr, item) {\n    var item_as_string = JSON.stringify(item);\n    var contains = arr.some(function (ele) {\n        return JSON.stringify(ele) === item_as_string;\n    });\n    return contains;\n}\n\nfunction arrayEquals(array1, array2) {\n    if (JSON.stringify(array1) === JSON.stringify(array2)) {\n        return true\n    }\n    else return false\n}\n\nfunction randomItem(array) {\n    return array[Math.floor(Math.random() * array.length)]\n  }\n\nmodule.exports = {\n    isArrayInArray:isArrayInArray,\n    arrayEquals:arrayEquals,\n    randomItem:randomItem\n}\n","module.exports =  [\n    { 'acronym': 'ETV', 'fullWord': 'Enhanced TV'},\n    { 'acronym': 'FSAT', 'fullWord': 'FreeSat'},\n    { 'acronym':  'DSAT', 'fullWord': 'Digital Sky Platform'},\n    { 'acronym': 'DCAB', 'fullWord': 'Digital Cable Platform'},\n    { 'acronym': 'OCP', 'fullWord': 'Open Core Protocol'},\n    { 'acronym': 'RB+', 'fullWord': 'Red Button Plus'},\n    { 'acronym': 'HbbTv', 'fullWord': 'Hybrid Broadcast Broadband'},\n    { 'acronym': 'TAP', 'fullWord': 'TV Application Platform'},\n    { 'acronym': 'TTR', 'fullWord': 'Tap Tap Revolution'},\n    { 'acronym': 'TAF', 'fullWord': 'TV Application Framework'},\n    { 'acronym': 'CI', 'fullWord': 'Carousel Injector'},\n    { 'acronym': 'ITV', 'fullWord': 'Interactive TV'},\n    { 'acronym': 'Wipeline', 'fullWord': '💀💀💀'},\n    { 'acronym': 'Asimux', 'fullWord': 'You don\\'t want to know'}\n\n  ]","function load(setDirection, prevDir) {\n    var interval;\n    if (!('ongamepadconnected' in window)) {\n        interval = setInterval(pollGamepads, 250)\n    }\n    function pollGamepads() {\n        var gamepads = navigator.getGamepads ? navigator.getGamepads() : [];\n        var gp = gamepads[0];\n        //Add logic not to go back on its self and analogue\n        if (gp) {\n            if(!prevDir)\n             return\n            if (gp.buttons[13].pressed || gp.axes[1] > 0.5) {\n                if (prevDir.current != \"up\")\n                setDirection(\"down\")\n            } else \n            if (gp.buttons[15].pressed || gp.axes[0] > 0.5) {\n                if (prevDir.current != \"left\")\n                  setDirection(\"right\")\n            } else \n            if (gp.buttons[12].pressed || gp.axes[1] < -0.5) {\n                if (prevDir.current != \"down\")\n                setDirection(\"up\")\n            } else \n            if (gp.buttons[14].pressed || gp.axes[0] < -0.5) {\n                if (prevDir.current != \"right\")\n                setDirection(\"left\")\n            }\n\n            clearInterval(interval);\n        }\n    }\n}\n\n\nmodule.exports = {\n    load: load,\n}\n","import React from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nfunction rotateHead(cell, direction, style) {\n    switch (direction) {\n        case \"right\":\n            style.top = `${cell.y - 1}%`;\n            style['transform'] = 'rotate(270deg)';\n            break;\n        case \"left\":\n            style.left = `${cell.x - 0.5}%`;\n            style.top = `${cell.y - 1}%`;\n            style['transform'] = 'rotate(90deg)';\n            break;\n        case \"down\":\n            style.left = `${cell.x - 0.3}%`;\n            style.top = `${cell.y - 1}%`;\n            break;\n        case \"up\":\n            style.left = `${cell.x - 0.3}%`;\n            style.top = `${cell.y - 1}%`;\n            style['transform'] = 'rotate(180deg)';\n            break;\n    }\n}\n\nexport default (props) => {\n    return (\n        <ReactCSSTransitionGroup\n            transitionName=\"animation\"\n            transitionEnterTimeout={props.speed}\n            transitionLeaveTimeout={props.speed}>\n            {props.snake.map((cell, i) => {\n                const style = {\n                    left: `${cell.x}%`,\n                    top: `${cell.y}%`\n                }\n    \n                if (props.snake.length - 1 == i) {                 \n                   let snakeHeadImage = 'snake-head.png'\n                    if(props.isGameOver) { \n                        snakeHeadImage = 'snake-head-dead.png'}\n                    else {\n                        rotateHead(cell, props.direction, style)\n                    }\n\n                    if(props.closeToFood) { \n                      snakeHeadImage = 'snake-head-eat.png'\n                    }\n                    return <img key=\"head\" className=\"snake-head\" src={snakeHeadImage} style={style} ></img>                \n                }\n                else {\n                    return <div key={[cell.x, cell.y]} className=\"snake-body\" style={style}></div>\n                }\n            })}\n        </ReactCSSTransitionGroup>);\n}\n\n","import React from 'react';\nimport Confetti from 'react-dom-confetti';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nconst config = {\n    angle: \"360\",\n    spread: \"360\",\n    startVelocity: \"22\",\n    elementCount: \"20\",\n    dragFriction: \"0.05\",\n    duration: \"1350\",\n    stagger: 0,\n    width: \"10px\",\n    height: \"10px\",\n    colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"]\n};\n\nexport default (props) => {\n    const style = {\n        left: `${props.food.x}%`,\n        top: `${props.food.y}%`,\n        position: 'absolute'\n    }\n    let confStyle = {\n        left: `${props.confettiLocation.x}%`,\n        top: `${props.confettiLocation.y}%`,\n        position: 'absolute'\n    }\n    return (\n        <div>\n            <div style={confStyle}>\n                <Confetti active={props.showConfetti} config={config} />\n            </div>\n            <div className=\"food\" style={style}>\n                {props.acronymStatus ?\n                    <div className=\"foodText\"> {props.currentAcronym.acronym}\n                        <ReactCSSTransitionGroup\n                            transitionName=\"foodAnswer\"\n                            transitionEnterTimeout={500}\n                            transitionLeaveTimeout={500}>\n                            <h1 key={props.currentAcronym.fullWord} >\n                                <span aria-hidden=\"true\" id=\"answer\">{props.currentAcronym.fullWord} </span>\n                            </h1>\n                        </ReactCSSTransitionGroup> </div> : null}\n            </div>\n        </div>)\n}\n","import React from 'react';\nimport Toggle from 'react-toggle'\nimport \"react-toggle/style.css\"\n\nexport default (props) => {\n\n    function setSound() {\n        if (props.volume == 1)\n          props.setVolume(0)\n        else\n          props.setVolume(1)\n      }\n\n      function setAiStatus() {\n        if (props.aiStatus)\n          props.setAi(false)\n        else\n          props.setAi(true)\n      }\n\n      function seAcronymStatus() {\n        console.log(props.acronymStatus)\n        if (props.acronymStatus)\n          props.setAcronymStatus(false)\n        else\n          props.setAcronymStatus(true)\n      }\n\n    return (\n        <div className=\"parent\">\n            <div className=\"child\">\n                <div className=\"gameBoardText\">Score: {props.score}</div>\n            </div>\n            <div className=\"child\" style={{'width': '500px'}}>\n                <div className=\"gameBoardText\">{props.fullWord} </div>\n            </div>\n            <div className=\"settingContainer\">\n                <div className=\"settings\">\n                    <div style={{'width':'37%'}}>AI\n                      <Toggle className=\"spacing\"  style={{'paddingTop':'37%'}} defaultChecked={false} onChange={() => setAiStatus()} />\n                    </div>\n                    <div  style={{'width':'60%'}}>Sound\n                      <Toggle className=\"spacing\" defaultChecked={true} onChange={() => setSound()} />\n                    </div>\n                    <div  style={{'width':'71%'}}> Acronym\n                      <Toggle className=\"spacing\" defaultChecked={props.acronymsStatus} onChange={() => seAcronymStatus()} />\n                    </div>\n                </div>\n            </div>\n        </div>)\n}\n","import React from 'react';\n\nexport default (props) => {\n\n  return (\n        <div className=\"game-over\">\n          <div>Game Over</div>\n          <nav>\n            <ul>\n              <li onClick={props.closeModal}>\n                Restart\n              <span></span><span></span><span></span><span></span>\n              </li>\n            </ul>\n          </nav>\n        </div>\n  );\n}","import React from 'react';\nimport Modal from 'react-modal';\nimport FancyButton from './FancyButton'\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    height: '200px',\n    width: '300px',\n    boxShadow: '0 3px 7px rgba(0, 0, 0, 0.3)',\n    transform: 'translate(-50%, -50%)',\n    border: '2px solid rgba(224, 43, 125, 1)'\n  }\n};\n\nexport default (props) => {\n\n  function afterOpenModal() {\n     //Confetti effects? \n  }\n\n  function closeModal() {\n    props.setGameOver(false);\n    window.location.reload()\n  }\n\n  return (\n    <div className=\"modal\">\n      <Modal\n        isOpen={props.isGameOver}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        style={customStyles}\n        shouldCloseOnOverlayClick={false} >\n        <FancyButton closeModal={closeModal} />\n      </Modal>\n    </div>\n  );\n}","import React, { useState, useEffect, useRef } from 'react';\nimport Snake from './Snake';\nimport Food from './Food';\nimport ScoreBoard from './ScoreBoard';\nimport GameOverScreen from './GameOverScreen'\nimport AI from './Ai'\n\nconst helper = require('./helper.js');\nconst acronyms = require('./acronyms.js');\nconst gamepad = require('./gamepad.js');\n\nfunction App() {\n  const [score, setScore] = useState(0)\n  const [food, setFood] = useState(randomLocation())\n  const [speed, setSpeed] = useState(50)\n  const [direction, setDirection] = useState(\"right\")\n  const prevDirection = usePrevious(direction)\n  const [aiStatus, setAi] = useState(false)\n  const [volume, setVolume] = useState(1)\n  const [isGameOver, setGameOver] = useState(false);\n  const [showConfetti, setConfetti] = useState(false);\n  const [confettiLocation, setConfettiLocation] = useState(food);\n\n  const [snakeCells, setSnake] = useState([\n    { 'x': 0, 'y': 0 },\n    { 'x': 2, 'y': 0 },\n    { 'x': 4, 'y': 0 },\n    { 'x': 6, 'y': 0 },\n  ]);\n\n  const [acronymMap, setAcronymsMap] = useState(acronyms);\n  const [currentAcronym, setAcronym] = useState(helper.randomItem(acronymMap))\n  const [closeToFood, setCloseToFood] = useState(false);\n  const [acronymStatus, setAcronymStatus] = useState(false);\n\n  gamepad.load(setDirection, prevDirection.current)\n\n  useEffect(() => {\n    window.addEventListener('keydown', keypress)\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (isGameOver) return;\n\n      if (!aiStatus) {\n        tick()\n      } else {\n        AI.tick(snakeCells, food, updateBody, setSpeed,\n          setSnake, setDirection, direction, foodCheck)\n      }\n    }, speed);\n    return () => clearInterval(interval);\n  }, [speed, direction, food, snakeCells]);\n\n  function usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    }, [value]); // Only re-run if value changes\n\n    return ref;\n  }\n\n  function randomLocation() {\n    let x = Math.floor(Math.random() * 100 / 2) * 2;\n    let y = Math.floor(Math.random() * 100 / 2) * 2;\n    return { 'x': x, 'y': y }\n  }\n\n  function keypress({ key }) {\n    switch (key) {\n      case \"ArrowRight\":\n        if (prevDirection.current != \"left\")\n          setDirection(\"right\")\n        break\n      case \"ArrowLeft\":\n        if (prevDirection.current != \"right\")\n          setDirection(\"left\")\n        break\n      case \"ArrowDown\":\n        if (prevDirection.current != \"up\")\n          setDirection(\"down\")\n        break\n      case \"ArrowUp\":\n        if (prevDirection.current != \"down\")\n          setDirection(\"up\")\n        break\n    }\n  }\n\n  function updateBody(snakeCells) {\n    let updatedCells = [...snakeCells]\n    for (let cell = 0; cell < updatedCells.length - 1; cell++) {\n      updatedCells[cell].x = snakeCells[cell + 1].x\n      updatedCells[cell].y = snakeCells[cell + 1].y\n    }\n\n    return updatedCells;\n  }\n\n  function gameOver() {\n    setGameOver(true)\n    playSound('game-over.mp3')\n  }\n\n  function headBodyCollisionCheck(snakeHead) {\n    let snakeBody = snakeCells.slice(0, -1)\n\n    if (helper.isArrayInArray(snakeBody, snakeHead)) {\n      gameOver()\n    }\n  }\n\n  function outOfBoundsCheck(snakeHead) {\n    if (snakeHead.x > 99 || snakeHead.x < 0\n      || snakeHead.y < 0 || snakeHead.y > 99) {\n      gameOver()\n    } else\n      return false;\n  }\n\n  function hasEatenFood(snakeHead) {\n    return helper.arrayEquals(snakeHead, food);\n  }\n\n  function playSound(sound) {\n    var bloop = new Audio(sound)\n    bloop.volume = volume\n    bloop.play()\n  }\n\n  function increaseSnakeLength(updatedCells) {\n    let snakeTail = updatedCells[0]\n    updatedCells.unshift({ 'x': snakeTail.x, 'y': snakeTail.y })\n  }\n\n  function handleCloseToFood(snakeHead) {\n    let distanceX = Math.abs(food.x - snakeHead.x)\n    let distanceY = Math.abs(food.y - snakeHead.y)\n\n    if (distanceX < 12 && distanceY < 12) {\n      if(!closeToFood) {\n        playSound('mouth.mp3')\n      }\n      setCloseToFood(true)\n    }\n    else {\n      setCloseToFood(false)\n    }\n  }\n\n  function foodCheck(snakeHead, updatedCells) {\n    handleCloseToFood(snakeHead, updatedCells)\n    if (hasEatenFood(snakeHead)) {\n      setConfettiLocation({'x': snakeHead.x, 'y': snakeHead.y})\n      setConfetti(true)\n      setFood(randomLocation())\n      // setSpeed(speed - 10)\n      setScore(score => score + 1)\n      setAcronym(helper.randomItem(acronymMap))\n      playSound('bling.mp3')\n      increaseSnakeLength(updatedCells)\n    }\n    else {\n      setConfetti(false)\n    }\n  }\n\n  function tick() {\n\n    let updatedCells = updateBody(snakeCells)\n    let snakeHead = updatedCells.slice(-1)[0]\n\n    switch (direction) {\n      case \"right\":\n        snakeHead.x += 2;\n        break\n      case \"left\":\n        snakeHead.x -= 2;\n        break\n      case \"down\":\n        snakeHead.y += 2;\n        break\n      case \"up\":\n        snakeHead.y -= 2;\n        break\n    }\n\n    outOfBoundsCheck(snakeHead)\n    headBodyCollisionCheck(snakeHead)\n    foodCheck(snakeHead, updatedCells)\n\n    setSnake(updatedCells)\n  }\n\n  return (\n    <div>\n      <GameOverScreen isGameOver={isGameOver} setGameOver={setGameOver} />\n      <ScoreBoard score={score} setAi={setAi} setAcronymStatus={setAcronymStatus}  acronymStatus={acronymStatus}  aiStatus={aiStatus} setVolume={setVolume} volume={volume} fullWord={currentAcronym.fullWord} />\n      <div className=\"game-area\">\n        <Snake snake={snakeCells} speed={speed} direction={direction} closeToFood={closeToFood} isGameOver={isGameOver}/>\n        <Food food={food} confettiLocation={confettiLocation} currentAcronym={currentAcronym} showConfetti={showConfetti} acronymStatus={acronymStatus}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}